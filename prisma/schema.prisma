generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PIQ_Food_Avoid_master {
  food_avoid_id     Int       @id(map: "PIQ_Food_Avoid_pkey") @default(autoincrement())
  pet_type          String?   @db.VarChar
  pet_breed         String?   @db.VarChar
  pet_built         String?   @db.VarChar
  food_to_avoid     String?   @db.VarChar
  food_avoid_reason String?   @db.VarChar
  full_json_text    Json?     @db.Json
  is_record_active  Boolean?
  last_updated_dtm  DateTime? @db.Timestamp(6)
  created_at        DateTime  @default(now()) @db.Timestamptz(6)
}

model PIQ_Pet_Weight_master {
  pet_wght_mstr_id   Int       @id(map: "PIQ_Pet_weight_master_pkey") @default(autoincrement())
  pet_type           String?   @db.VarChar
  pet_gender         String?   @db.VarChar
  pet_breed          String?   @db.VarChar
  pet_built          String?   @db.VarChar
  pet_age_group      String?   @db.VarChar
  ideal_weight_range String?   @db.VarChar
  ideal_weight_unit  String?   @db.VarChar
  pet_comments       String?   @db.VarChar
  created_at         DateTime  @default(now()) @db.Timestamptz(6)
  last_updated_dtm   DateTime? @db.Timestamp(6)
}

model PIQ_Pets {
  pet_id           BigInt             @id @default(autoincrement())
  user_id          BigInt?
  pet_type         String?            @db.VarChar
  pet_name         String?            @db.VarChar
  pet_breed        String?            @db.VarChar
  pet_gender       String?            @db.VarChar
  pet_birth_dtm    DateTime?          @db.Date
  pet_blood_grp    String?            @db.VarChar
  pet_status       String?            @db.VarChar
  created_at       DateTime           @default(now()) @db.Timestamptz(6)
  last_updated_dtm DateTime?          @default(now()) @db.Timestamp(6)
  PIQ_User         PIQ_User?          @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  PIQ_Pets_Photo   PIQ_Pets_Photo[]
  PIQ_pets_profile PIQ_pets_profile[]
}

model PIQ_Pets_Photo {
  pet_photo_id     BigInt    @id @default(autoincrement())
  pet_id           BigInt?
  pet_photo        Bytes?
  is_photo_default Boolean?
  photo_shareable  Boolean?
  photo_url        String?   @db.VarChar
  created_at       DateTime  @default(now()) @db.Timestamptz(6)
  last_updated_dtm DateTime? @default(now()) @db.Timestamp(6)
  PIQ_Pets         PIQ_Pets? @relation(fields: [pet_id], references: [pet_id], onDelete: NoAction, onUpdate: NoAction)
}

model PIQ_Service_Master {
  services_id       Int       @id @default(autoincrement())
  service_types     String    @db.VarChar
  service_sub_types String    @db.VarChar
  service_title     String    @db.VarChar
  service_desc      String    @db.VarChar
  service_price_amt Int
  service_duration  Int       @db.SmallInt
  created_at        DateTime  @default(now()) @db.Timestamptz(6)
  last_updated_dtm  DateTime? @db.Timestamp(6)
}

model PIQ_Service_Provider {
  service_provider_id     Int       @id @default(autoincrement())
  provider_name           String?   @db.VarChar
  provider_email          String?   @db.VarChar
  provider_contact_number String?   @db.VarChar
  provider_password       String?   @db.VarChar
  provider_status         String?   @db.VarChar
  provider_src            String?   @db.VarChar
  provider_request_dtm    DateTime? @db.Timestamp(6)
  provider_approval_dtm   DateTime? @db.Timestamp(6)
  is_provider_bgchecked   Boolean?
  created_at              DateTime  @default(now()) @db.Timestamptz(6)
  last_updated_dtm        DateTime? @db.Timestamp(6)
  services_offered        String?   @db.VarChar
}

model PIQ_Service_Provider_Dtls {
  serv_provider_dtls_id         Int       @id @default(autoincrement())
  service_provider_id           Int?
  serv_provider_exp_years       Int?      @db.SmallInt
  serv_provider_certificates    String?   @db.VarChar
  serv_provider_photo           Bytes?
  serv_provider_desc            String?   @db.VarChar
  serv_provider_pet_type        String?   @db.VarChar
  serv_provider_breed_serviced  String?   @db.VarChar
  serv_provider_specialization  String?   @db.VarChar
  serv_provider_servicetypes    String?   @db.VarChar
  serv_provider_insta_acct_dtls String?   @db.VarChar
  serv_provider_fb_acct_dtls    String?   @db.VarChar
  created_dtm                   DateTime  @default(now()) @db.Timestamptz(6)
  last_updated_dtm              DateTime? @db.Timestamp(6)
}

model PIQ_User {
  user_id                  BigInt     @id @default(autoincrement())
  user_full_name           String     @db.VarChar
  user_email_id            String     @db.VarChar
  user_password            String
  user_phone_number        String     @db.VarChar
  user_second_phone_number String?    @db.VarChar
  user_status              String     @default("") @db.VarChar
  last_updated_dtm         DateTime   @default(now()) @db.Timestamp(6)
  created_at               DateTime   @default(now()) @db.Timestamptz(6)
  paid_user                Boolean?   @default(false)
  PIQ_Pets                 PIQ_Pets[]
}

model PIQ_pets_profile {
  pets_profile_id    Int       @id @default(autoincrement())
  pet_id             BigInt
  pet_age            Int       @db.SmallInt
  pet_weight         Int?      @db.SmallInt
  pet_weight_unit    String?   @db.VarChar
  pet_height         Int?      @db.SmallInt
  pet_height_unit    String?   @db.VarChar
  Is_pet_over_weight Boolean
  created_at         DateTime  @default(now()) @db.Timestamptz(6)
  last_updated_dtm   DateTime? @default(now()) @db.Timestamp(6)
  PIQ_Pets           PIQ_Pets  @relation(fields: [pet_id], references: [pet_id], onDelete: NoAction, onUpdate: NoAction)
}

model admins {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String
  email      String   @unique
  password   String
  role       String   @default("admin")
  created_at DateTime @default(now()) @db.Timestamptz(6)
}